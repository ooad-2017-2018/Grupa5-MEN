@using AspNet.Models
@model Dojava
@{
    ViewBag.Title = "e-Routing";
}
<h2>UPUTE VOŽNJE</h2>
<head>
    <title>Place Autocomplete</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
         /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
         #map {
             float:left;
             width: 63%;
             height: 500px;
         }
        #right-panel {
            float: right;
            width: 36%;
            height: 500px;
        }
        #right-panel {
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
            overflow: scroll;
        }
            #right-panel select, #right-panel input {
                font-size: 15px;
            }
            #right-panel select {
                width: 300px;
            }
            #right-panel i {
                font-size: 12px;
            }

         .controls {
             margin-top: 10px;
             border: 1px solid transparent;
             border-radius: 2px 0 0 2px;
             box-sizing: border-box;
             -moz-box-sizing: border-box;
             height: 32px;
             outline: none;
             box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
         }

         #origin-input,
         #destination-input {
             background-color: #fff;
             font-family: Roboto;
             font-size: 15px;
             font-weight: 300;
             margin-left: 12px;
             padding: 0 11px 0 13px;
             text-overflow: ellipsis;
             width: 300px;
         }

             #origin-input:focus,
             #destination-input:focus {
                 border-color: #4d90fe;
             }
        .panel {
            height: 600px;
            overflow: scroll;
        }
    </style>
</head>
<body>
    <input id="origin-input" class="controls" type="text"
           placeholder="Enter an origin location">

    <input id="destination-input" class="controls" type="text"
           placeholder="Enter a destination location">

    <div id="map"></div>

    <div id="right-panel">
        <p>Total Distance: <span id="total"></span></p>
    </div>

    <script>

        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                mapTypeControl: false,
                center: { lat: 43.855067, lng: 18.404656 },
                zoom: 13
            });
            var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';
            var icon = {
                url: "/Content/Logo-crash.jpg",
                scaledSize: new google.maps.Size(25, 25),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(0, 0)
            };
            var ime = "Title";
            //var markeri = ViewData["Dojave"];
            //markeri.forEach(function (ime) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: new google.maps.LatLng(43.855067, 18.404656),
                    icon: icon,
                    title: ime,
                    /*icon: 'https://cdn1.iconfinder.com/data/icons/Webtoys/64/Pin.png', */
                    //Text:"Marker"
                });
            //});
            new AutocompleteDirectionsHandler(map);

        }
        function AutocompleteDirectionsHandler(map) {
            this.map = map;
            this.originPlaceId = null;
            this.destinationPlaceId = null;
            this.travelMode = 'DRIVING';
            var originInput = document.getElementById('origin-input');
            var destinationInput = document.getElementById('destination-input');
            this.directionsService = new google.maps.DirectionsService;
            this.directionsDisplay = new google.maps.DirectionsRenderer({
                map: map,
                panel: document.getElementById('right-panel')
            });
            this.directionsDisplay.setMap(map);

            var originAutocomplete = new google.maps.places.Autocomplete(
                originInput, { placeIdOnly: true });
            var destinationAutocomplete = new google.maps.places.Autocomplete(
                destinationInput, { placeIdOnly: true });

            this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
            this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
            this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
        }

        AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function (autocomplete, mode) {
            var me = this;
            autocomplete.bindTo('bounds', this.map);
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                if (!place.place_id) {
                    window.alert("Please select an option from the dropdown list.");
                    return;
                }
                if (mode === 'ORIG') {
                    me.originPlaceId = place.place_id;
                } else {
                    me.destinationPlaceId = place.place_id;
                }
                me.route();
            });

        };

        AutocompleteDirectionsHandler.prototype.route = function () {
            if (!this.originPlaceId || !this.destinationPlaceId) {
                return;
            }
            var me = this;

            this.directionsService.route({
                origin: { 'placeId': this.originPlaceId },
                destination: { 'placeId': this.destinationPlaceId },
                travelMode: this.travelMode
            }, function (response, status) {
                if (status === 'OK') {
                    me.directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        };

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyArwm7LrXuW2CnouB8atXKyXdnPevofGrk&libraries=places&callback=initMap"
            async defer></script>
</body>